name: Build & Test & Publish

on:
  push:
    branches: [ master ]
    paths:
      - '**Dockerfile'
  pull_request:
    branches: [ master ]
    paths:
      - '**Dockerfile'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v18.4
      - name: build-test-publish
        run: |
          docker login -u=${{ secrets.DOCKER_USERNAME }} -p=${{ secrets.DOCKER_PASSWORD }}
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ "$file" == *"Dockerfile" ]]; then
              make build FILE=$file
              tag=`dirname $file`
              if [ $tag == "all" ]; then
                versions="14 13 12 11 10 9 8"
              else
                versions=$tag
              fi
              for version in ${versions}; do
                docker run clang-tools:$tag clang-format-$version --version | grep -E clang-format.*$version
                if [ $? -ne 0 ]; then exit 1; fi
                docker run clang-tools:$tag clang-format-$version --version | grep "LLVM version $version"
                if [ $? -ne 0 ]; then exit 1; fi
              done
              docker push xianpengshen/clang-tools:$tag
            fi
          done
